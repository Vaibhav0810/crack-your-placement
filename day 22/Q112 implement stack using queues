using deque

class MyStack {
    deque<int> q1;
public:
    MyStack() {
        
    }
    
    void push(int x) {
        q1.push_back(x);
    }
    
    int pop() {
        int x=top();
        q1.pop_back();
        return x;
    }
    
    int top() {
        return q1.back();
    }
    
    bool empty() {
        if(q1.empty()) return true;
        return false;
    }
};

Using 1 queue

class MyStack {
public:
    queue<int> q;
    MyStack() {
        
    }
    
    void push(int x) {
        q.push(x);
        for(int i=1;i<q.size();i++){
            q.push(q.front());
            q.pop();
        }
    }
    
    int pop() {
        int x=q.front();
        q.pop();
        return x;
    }
    
    int top() {
        return q.front();
    }
    
    bool empty() {
        if(q.empty()) return true;
        return false;
    }
};

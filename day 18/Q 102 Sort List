Time- O(n^2);
Space-O(1);

class Solution {
public:
    ListNode* sortList(ListNode* head) {
        ListNode* temp=head;
        if(head==NULL){
            return NULL;
        }
        int count=0;
        while(temp){
            count++;
            temp=temp->next;
        }
        temp=head;
        while(count--){
        while(temp->next){
            if(temp->next->val<temp->val){
                int copy=temp->next->val;
                temp->next->val=temp->val;
                temp->val=copy;
            }
            temp=temp->next;
        }
            temp=head;
        }
        return head;
    }
};

Time- O(n log n)
Space- O(n)

class Solution {
public:
    ListNode* sortList(ListNode* head) {
        
        vector<int> v;
        
        ListNode* temp=head;
        
        while(temp){
            v.push_back(temp->val);
            temp=temp->next;
        }
        temp=head;
        
        sort(v.begin(),v.end());
        
        for(int i=0;i<v.size();i++){
            temp->val=v[i];
            temp=temp->next;
        }
        
        delete(temp);
        return head;
    }
};

